import { Column, Entity, PrimaryGeneratedColumn, ManyToMany } from 'typeorm'
import { UserEntity } from 'src/data/user.entity'

/**
 * Represents an event in the system.
 *
 * This entity defines an event, including its title, description, location, date,
 * and the users associated with the event. It is mapped to the events table in the database.
 */
@Entity()
export class EventEntity {
  /**
   * The unique identifier for the event.
   *
   * This is the primary key for the event entity and is auto-generated by the database.
   *
   * @type {number}
   */
  @PrimaryGeneratedColumn()
  id: number

  /**
   * The title of the event.
   *
   * This field is required and must be unique across all events.
   *
   * @type {string}
   */
  @Column({ unique: true })
  title: string

  /**
   * A detailed description of the event.
   *
   * This field contains information about what the event is about.
   *
   * @type {string}
   */
  @Column()
  description: string

  /**
   * The location where the event will take place.
   *
   * This field specifies the physical or virtual location for the event.
   *
   * @type {string}
   */
  @Column()
  location: string

  /**
   * The date and time when the event will occur.
   *
   * This field stores the timestamp with timezone information for the event's date and time.
   *
   * @type {Date}
   */
  @Column({ type: 'timestamptz' })
  date: Date

  /**
   * A many-to-many relationship with users attending the event.
   *
   * This field defines the relationship between the event and users who are part of it.
   *
   * @type {UserEntity[]}
   */
  @ManyToMany(() => UserEntity, user => user.events)
  users: UserEntity[]
}
